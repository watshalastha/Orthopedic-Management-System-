/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.*;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.print.attribute.standard.MediaPrintableArea;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.AbstractCellEditor;
import javax.swing.ButtonGroup;
import javax.swing.DefaultCellEditor;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTable.PrintMode;
import javax.swing.JTextArea;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.text.BadLocationException;
import javax.swing.text.Highlighter;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author jivan
 */
public final class view extends javax.swing.JFrame {
    int i;
    int j;
    int height;
    JTextArea area;
    DefaultCellEditor jj;
    ButtonGroup group;
  
    /**
     * Creates new form view
     */
    public view() {       
        initComponents();
        area=new JTextArea();
        populate();
        jMenuItem1.disable();
        jMenuItem1.setVisible(false);
        group=new ButtonGroup();
        group.add(name);
        group.add(patientid);
        group.add(diagnosis);
        group.add(investigation);
        group.add(plan);
       name.setSelected(true);
       populate1();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        view_table =  new JTable(){
            @Override
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
                Component component = super.prepareRenderer(renderer, row, column);
                int rendererWidth = component.getPreferredSize().width;
                TableColumn tableColumn = getColumnModel().getColumn(column);
                tableColumn.setPreferredWidth(Math.max(rendererWidth + getIntercellSpacing().width, tableColumn.getPreferredWidth()));
                return component;
            }
        };
        name = new javax.swing.JRadioButton();
        patientid = new javax.swing.JRadioButton();
        diagnosis = new javax.swing.JRadioButton();
        investigation = new javax.swing.JRadioButton();
        plan = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        searchtext = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        view = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        view_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(view_table);

        name.setText("Name");

        patientid.setText("PatientId");

        diagnosis.setText("Diagnosis");

        investigation.setText("Investigation");

        plan.setText("Plan");

        jLabel1.setText("Search By");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("View By Date");

        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        jMenuBar1.setBorder(null);
        jMenuBar1.setPreferredSize(new java.awt.Dimension(100, 20));

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Print");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Mode");

        jMenuItem2.setText("View Mode");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Print Mode");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 892, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(name)
                        .addGap(18, 18, 18)
                        .addComponent(patientid)
                        .addGap(18, 18, 18)
                        .addComponent(diagnosis))
                    .addComponent(searchtext))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(153, 153, 153)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(view, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(investigation)
                        .addGap(18, 18, 18)
                        .addComponent(plan)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jLabel2)
                    .addComponent(view, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(patientid)
                    .addComponent(diagnosis)
                    .addComponent(investigation)
                    .addComponent(plan)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       StringBuilder sb = new StringBuilder();
        PrintRequestAttributeSet attribs = new HashPrintRequestAttributeSet();
        attribs.add(new Copies(1));
        attribs.add(OrientationRequested.PORTRAIT);
        int xx = 1; //left and right margin
        int yy = 1; //top and bottom margin. Note that bottom margin cannot be less than 15 mm
        int ww = 599; //Width
        int hh = 854; //Height
        int units = MediaPrintableArea.MM;
        attribs.add(new MediaPrintableArea(xx, yy, ww, hh, units));
        MessageFormat footer = new MessageFormat("");
        try {
            view_table.print(PrintMode.FIT_WIDTH, footer, footer,true, attribs, true);
        } catch (PrinterException | HeadlessException ex) {
            Logger.getLogger(view.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jMenuItem1.disable();
        jMenuItem1.setVisible(false);
        view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        jMenuItem1.enable();
        jMenuItem1.setVisible(true);
        view_table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          String ss=null;
          ss=searchtext.getText();
         Connection con = Connect.ConnectDB();
        PreparedStatement st = null;
        ResultSet rs = null;
        String query="Select (Select concat_ws('|   ',Patientname,PatientID,Address,Age,Gen,Date,Room_No) as Patient),Diagnosis,Investigations,Plan from ortho_ward inner join patientregistration on ortho_ward.Patient_id=patientregistration.PatientID where PatientID like " +"'%"+ss+"%'";
        String query1="Select (Select concat_ws('|   ',Patientname,PatientID,Address,Age,Gen,Date,Room_No) as Patient),Diagnosis,Investigations,Plan from ortho_ward inner join patientregistration on ortho_ward.Patient_id=patientregistration.PatientID where Diagnosis like " +"'%"+ss+"%'";
        String query2="Select (Select concat_ws('|   ',Patientname,PatientID,Address,Age,Gen,Date,Room_No) as Patient),Diagnosis,Investigations,Plan from ortho_ward inner join patientregistration on ortho_ward.Patient_id=patientregistration.PatientID where Investigations like " +"'%"+ss+"%'";
        String query3="Select (Select concat_ws('|   ',Patientname,PatientID,Address,Age,Gen,Date,Room_No) as Patient),Diagnosis,Investigations,Plan from ortho_ward inner join patientregistration on ortho_ward.Patient_id=patientregistration.PatientID where Plan like " +"'%"+ss+"%'";
        String query4="Select (Select concat_ws('|   ',Patientname,PatientID,Address,Age,Gen,Date,Room_No) as Patient),Diagnosis,Investigations,Plan from ortho_ward inner join patientregistration on ortho_ward.Patient_id=patientregistration.PatientID where Patientname like " +"'%"+ss+"%'";
        if(name.isSelected()==true){
            try {
            st = con.prepareStatement(query4);
            rs = st.executeQuery();
            
            view_table.setModel(DbUtils.resultSetToTableModel(rs));  
            view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
             view_table.setPreferredSize(new Dimension(595,842));
            view_table.getColumnModel().getColumn(0).setHeaderValue("Patient");
           view_table.getColumnModel().getColumn(0).setPreferredWidth(100);
           view_table.getColumnModel().getColumn(0).setResizable(false);
            view_table.getColumnModel().getColumn(1).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(1).setResizable(false);
            view_table.getColumnModel().getColumn(2).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(2).setResizable(false);
            view_table.getColumnModel().getColumn(3).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(3).setResizable(false);
            
          
           for(i=0;i<view_table.getColumnCount();i++){
              view_table.getColumnModel().getColumn(i).setCellRenderer(new JTextAreaColumn());
              view_table.getColumnModel().getColumn(i).setCellEditor(new JTextAreaColumn());    
           }
           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }
        else if(patientid.isSelected()==true){
            try {
            st = con.prepareStatement(query);
            rs = st.executeQuery();
            
            view_table.setModel(DbUtils.resultSetToTableModel(rs));  
            view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
             view_table.setPreferredSize(new Dimension(595,842));
            view_table.getColumnModel().getColumn(0).setHeaderValue("Patient");
           view_table.getColumnModel().getColumn(0).setPreferredWidth(100);
           view_table.getColumnModel().getColumn(0).setResizable(false);
            view_table.getColumnModel().getColumn(1).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(1).setResizable(false);
            view_table.getColumnModel().getColumn(2).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(2).setResizable(false);
            view_table.getColumnModel().getColumn(3).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(3).setResizable(false);
            
          
           for(i=0;i<view_table.getColumnCount();i++){
              view_table.getColumnModel().getColumn(i).setCellRenderer(new JTextAreaColumn());
              view_table.getColumnModel().getColumn(i).setCellEditor(new JTextAreaColumn());    
           }
           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }
        else if(diagnosis.isSelected()==true){
            try {
            st = con.prepareStatement(query1);
            rs = st.executeQuery();
            
            view_table.setModel(DbUtils.resultSetToTableModel(rs));  
            view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
             view_table.setPreferredSize(new Dimension(595,842));
            view_table.getColumnModel().getColumn(0).setHeaderValue("Patient");
           view_table.getColumnModel().getColumn(0).setPreferredWidth(100);
           view_table.getColumnModel().getColumn(0).setResizable(false);
            view_table.getColumnModel().getColumn(1).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(1).setResizable(false);
            view_table.getColumnModel().getColumn(2).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(2).setResizable(false);
            view_table.getColumnModel().getColumn(3).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(3).setResizable(false);
            
          
           for(i=0;i<view_table.getColumnCount();i++){
              view_table.getColumnModel().getColumn(i).setCellRenderer(new JTextAreaColumn());
              view_table.getColumnModel().getColumn(i).setCellEditor(new JTextAreaColumn());    
           }
           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }
        else if (investigation.isSelected()==true){
            try {
            st = con.prepareStatement(query2);
            rs = st.executeQuery();
            
            view_table.setModel(DbUtils.resultSetToTableModel(rs));  
            view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
             view_table.setPreferredSize(new Dimension(595,842));
            view_table.getColumnModel().getColumn(0).setHeaderValue("Patient");
           view_table.getColumnModel().getColumn(0).setPreferredWidth(100);
           view_table.getColumnModel().getColumn(0).setResizable(false);
            view_table.getColumnModel().getColumn(1).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(1).setResizable(false);
            view_table.getColumnModel().getColumn(2).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(2).setResizable(false);
            view_table.getColumnModel().getColumn(3).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(3).setResizable(false);
            
          
           for(i=0;i<view_table.getColumnCount();i++){
              view_table.getColumnModel().getColumn(i).setCellRenderer(new JTextAreaColumn());
              view_table.getColumnModel().getColumn(i).setCellEditor(new JTextAreaColumn());    
           }
           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        }
        else{
        try {
            st = con.prepareStatement(query3);
            rs = st.executeQuery();
            
            view_table.setModel(DbUtils.resultSetToTableModel(rs));  
            view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
             view_table.setPreferredSize(new Dimension(595,842));
            view_table.getColumnModel().getColumn(0).setHeaderValue("Patient");
           view_table.getColumnModel().getColumn(0).setPreferredWidth(100);
           view_table.getColumnModel().getColumn(0).setResizable(false);
            view_table.getColumnModel().getColumn(1).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(1).setResizable(false);
            view_table.getColumnModel().getColumn(2).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(2).setResizable(false);
            view_table.getColumnModel().getColumn(3).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(3).setResizable(false);
            
          
           for(i=0;i<view_table.getColumnCount();i++){
              view_table.getColumnModel().getColumn(i).setCellRenderer(new JTextAreaColumn());
              view_table.getColumnModel().getColumn(i).setCellEditor(new JTextAreaColumn());    
           }
           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        populate();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        Connection con = Connect.ConnectDB();
        PreparedStatement st = null;
        ResultSet rs = null;
         String query="Select (Select concat_ws('|   ',Patientname,PatientID,Address,Age,Gen,Date,Room_No) as Patient),Diagnosis,Investigations,Plan from ortho_ward inner join patientregistration on ortho_ward.Patient_id=patientregistration.PatientID where Date='"+view.getSelectedItem().toString()+"'";
       try {
            st = con.prepareStatement(query);
            rs = st.executeQuery();
            
            view_table.setModel(DbUtils.resultSetToTableModel(rs));  
            view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
             view_table.setPreferredSize(new Dimension(595,842));
            view_table.getColumnModel().getColumn(0).setHeaderValue("Patient");
           view_table.getColumnModel().getColumn(0).setPreferredWidth(100);
           view_table.getColumnModel().getColumn(0).setResizable(false);
            view_table.getColumnModel().getColumn(1).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(1).setResizable(false);
            view_table.getColumnModel().getColumn(2).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(2).setResizable(false);
            view_table.getColumnModel().getColumn(3).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(3).setResizable(false);
            
          
           for(i=0;i<view_table.getColumnCount();i++){
              view_table.getColumnModel().getColumn(i).setCellRenderer(new JTextAreaColumn());
              view_table.getColumnModel().getColumn(i).setCellEditor(new JTextAreaColumn());    
           }
           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
                 
        // TODO add your handling code here:
    }//GEN-LAST:event_viewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view().setVisible(true);
            }
        });
    }
    private void populate1(){
        Connection con=Connect.ConnectDB();
        PreparedStatement st=null;
        ResultSet rs=null;
        String query="Select distinct Date from ortho_ward";
        try {
            st=con.prepareStatement(query);
            rs=st.executeQuery();
            while(rs.next()){
                String date=rs.getString("Date");
                view.addItem(date);
            }
        } catch (SQLException ex) {
            Logger.getLogger(view.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void populate(){
       
        
         String query="Select (Select concat_ws('|   ',Patientname,PatientID,Address,Age,Gen,Date,Room_No) as Patient),Diagnosis,Investigations,Plan from ortho_ward inner join patientregistration on ortho_ward.Patient_id=patientregistration.PatientID ";
       
        try {
            Connection con = Connect.ConnectDB();
            PreparedStatement st = null;
            ResultSet rs = null;    
            st = con.prepareStatement(query);
            rs = st.executeQuery();
            view_table.setModel(DbUtils.resultSetToTableModel(rs));  
            view_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
             view_table.setPreferredSize(new Dimension(595,842));
            view_table.getColumnModel().getColumn(0).setHeaderValue("Patient");
           view_table.getColumnModel().getColumn(0).setPreferredWidth(100);
           view_table.getColumnModel().getColumn(0).setResizable(false);
            view_table.getColumnModel().getColumn(1).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(1).setResizable(false);
            view_table.getColumnModel().getColumn(2).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(2).setResizable(false);
            view_table.getColumnModel().getColumn(3).setPreferredWidth(300);
           view_table.getColumnModel().getColumn(3).setResizable(false);
            
          
           for(i=0;i<view_table.getColumnCount();i++){
              view_table.getColumnModel().getColumn(i).setCellRenderer(new JTextAreaColumn());
              view_table.getColumnModel().getColumn(i).setCellEditor(new JTextAreaColumn());    
           }
           

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
         
    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton diagnosis;
    private javax.swing.JRadioButton investigation;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton name;
    private javax.swing.JRadioButton patientid;
    private javax.swing.JRadioButton plan;
    private javax.swing.JTextField searchtext;
    private javax.swing.JComboBox<String> view;
    private javax.swing.JTable view_table;
    // End of variables declaration//GEN-END:variables

   private class JTextAreaColumn extends AbstractCellEditor implements TableCellRenderer,TableCellEditor {

        private JTextArea area = new JTextArea();
      

        @Override
        public Object getCellEditorValue() {
           return area.getText();
        }

        @Override
        public Component getTableCellEditorComponent(JTable table,
                Object value, boolean isSelected, int row, int column) {
            area.setText(value == null ? "" : value.toString()); 
            return area;
        }

        @Override
        public Component getTableCellRendererComponent(JTable table,
                Object value, boolean isSelected, boolean hasFocus, int row,
                int column) {
            area.setText(value == null ? "" : value.toString());
            area.setEditable(false);
            area.setLineWrap(true);
            area.setWrapStyleWord(true);        
            area.setLineWrap(true);
            area.setWrapStyleWord(true);
            area.setBorder(null);
            area.setBackground(Color.white);
            area.setAlignmentY(JTextArea.CENTER_ALIGNMENT);
            area.setAlignmentX(JTextArea.CENTER_ALIGNMENT);
            table.setRowHeight(150);
            table.setShowGrid(true);
            table.setRowMargin(5);
            table.getColumnModel().setColumnMargin(5);
             
           
            return area;
        }

    }
}
